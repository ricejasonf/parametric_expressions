// Copyright Louis Dionne 2017
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#if defined(USE_PARMEXPR)
#include <parmexpr/hana/at.hpp>
#include <parmexpr/hana/tuple.hpp>
namespace hana = parmexpr::hana;
#else
#include <boost/hana/at.hpp>
#include <boost/hana/tuple.hpp>
namespace hana = boost::hana;
#endif

template<int> struct x {};

int main() {
<% env[:k].times do |k| %>
    constexpr auto <%= "xs#{k}" %> = hana::make_tuple(
        <%= ((k*n+1)..(k*n+n)).map { |i| "x<#{i}>{}" }.join(', ') %>
    );

    <% (env[:p]*n/100).times do |p| %>
    #if defined(METABENCH)
        constexpr auto <%= "result#{p}#{k}" %> = hana::at_c<<%= p*100/env[:p] %>>(<%= "xs#{k}" %>);
    #endif
    <% end %>
<% end %>
}
