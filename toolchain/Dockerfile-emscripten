FROM ricejasonf/cppdock as parmexpr_build
  WORKDIR /opt/src
  RUN cppdock install_src 2a333e6b14e94de7fa32dd0a772886d028515708 \
                          emscripten-core/emscripten-fastcomp \
                          ./emscripten-fastcomp \
   && cppdock install_src e261dc01acd937261e45c958898e13c76220c38d \
                          ricejasonf/emscripten-fastcomp-clang \
                          ./emscripten-fastcomp/tools/clang \
   && cppdock install_src 61b0a0088b54793b2d4e7fc2f1b1a1f3893293a8 \
                          llvm-mirror/libcxx \
                          ./emscripten-fastcomp/projects/libcxx \
   && cppdock install_src bd80f6625dec55d43bab409ab0b71b94472eff28 \
                          llvm-mirror/libcxxabi \
                          ./emscripten-fastcomp/projects/libcxxabi \
   && cppdock install_src ad7b519b3ab8b67e5ce3ceccf0d4cd8d77c52cf4 \
                          ldionne/metabench ./metabench

  RUN  apt-get update && apt-get -yq install build-essential

  WORKDIR /opt/build/
  RUN cmake \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr/local \
      -DLLVM_TARGETS_TO_BUILD="X86;ARM;JSBackend" \
      -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_TESTS=OFF \
      -DCLANG_INCLUDE_EXAMPLES=OFF -DCLANG_INCLUDE_TESTS=OFF \
      /opt/src/emscripten-fastcomp \
   && make -j4 && make install

  # Include Metabench for convenience
  WORKDIR /opt/src

FROM ricejasonf/cppdock
  RUN  apt-get update && apt-get -yq install libc++1 ruby \
    default-jre-headless nodejs npm build-essential

  COPY --from=parmexpr_build /usr/local/lib /usr/local/lib
  COPY --from=parmexpr_build /usr/local/include /usr/local/include
  COPY --from=parmexpr_build /usr/local/bin /usr/local/bin
  COPY --from=parmexpr_build /opt/src/metabench/metabench.cmake \
    /opt/metabench.cmake
  COPY toolchain_emscripten.cmake /opt/toolchain.cmake

  # Install Emscripten
  WORKDIR /usr/local/src
  RUN git clone --depth 1 -b 1.38.25 https://github.com/emscripten-core/emscripten.git \
   && rm -rf emscripten/tests
  #RUN cppdock install_src d227b6aa2e92eaffad8f53b422232179ecac794e \
  #emscripten-core/emscripten ./emscripten

  WORKDIR /usr/local/src/emscripten
  RUN ./emcc -v \
   && ./embuilder.py build ALL

  ENV CC=/usr/local/bin/clang \
      CXX=/usr/local/bin/clang++ \
      LD_LIBRARY_PATH=/usr/local/lib \
      EMCC_SKIP_SANITY_CHECK=1

  RUN echo 'export EMCC_SKIP_SANITY_CHECK=1' >> /root/.bashrc
  RUN ln -s /usr/local/src/emscripten/system /opt/sysroot && mkdir /opt/install
